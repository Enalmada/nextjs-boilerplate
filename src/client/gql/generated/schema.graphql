"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

scalar File

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""The query mutation type."""
type Mutation {
  createTask(input: MutationCreateTaskInput!): Task!
  deleteTask(id: ID!): Task
  updateTask(id: ID!, input: MutationUpdateTaskInput!): Task
  uploadFile(file: File!): UploadResponse!
}

input MutationCreateTaskInput {
  description: String
  dueDate: DateTime
  status: TaskStatus!
  title: NonEmptyString!
}

input MutationUpdateTaskInput {
  description: String
  dueDate: DateTime
  status: TaskStatus!
  title: NonEmptyString!
  version: Int!
}

"""A string that cannot be passed as an empty value"""
scalar NonEmptyString

input OrderInput {
  sortBy: String!
  sortOrder: SortOrder!
}

input PaginationInput {
  page: Int!
  pageSize: Int!
}

"""The query root type."""
type Query {
  me: User
  task(id: ID!): Task
  tasksPage(input: QueryTasksPageInput!): TaskPage!
  users: [User!]
}

input QueryTasksPageInput {
  order: OrderInput
  pagination: PaginationInput
  where: TaskWhere
}

enum SortOrder {
  ASC
  DESC
}

type Task {
  createdAt: DateTime!
  description: String
  dueDate: DateTime
  id: ID!
  status: TaskStatus!
  title: NonEmptyString!
  updatedAt: DateTime!
  version: Int!
}

"""Type used for querying paginated tasks"""
type TaskPage {
  hasMore: Boolean!
  tasks: [Task!]!
}

enum TaskStatus {
  ACTIVE
  COMPLETED
}

input TaskWhere {
  id: String
  title: String
}

type UploadResponse {
  filename: String!
}

type User {
  createdAt: DateTime!
  email: String
  id: ID!
  name: String
  role: UserRole!
  rules: JSON
  tasks: [Task!]
  updatedAt: DateTime!
  version: Int!
}

enum UserRole {
  ADMIN
  MEMBER
}